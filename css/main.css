/*
 * HTML5 Boilerplate
 *
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html,
button,
input,
select,
textarea {
    color: #222;
}

body {
    font-size: 1em;
    line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight: h5bp.com/i
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
 * Remove the gap between images and the bottom of their containers: h5bp.com/i/440
 */

img {
    vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
    resize: vertical;
}

/* ==========================================================================
   Chrome Frame prompt
   ========================================================================== */

.chromeframe {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */
body {
    background-color: #fff;
    color: #222;
}

body.left-menu-open, body.right-menu-open {
    overflow-x: hidden;
    white-space: nowrap;
}

div.header {
    position: relative;
}

h1.title {
    margin: 0;
    font-size: 1.1em;
    background-color: #aaa;
    color: #222;
    text-align: center;
}

.menu-button {
    border: none;
    height: 25px;
    width: 52px;
    padding: 0 4px;
    background-color: #aaa;
}

.menu-button.pull-left {
    position: absolute;
    top: 0;
    left: 0;
    text-align: left;
}

.menu-button.pull-right {
    position: absolute;
    top: 0;
    right: 0;
    text-align: right;
}

body.left-menu-open #modeMenu {
    display: inline-block;
    width: 90%;
    vertical-align: top;
}

body.right-menu-open #content {
    display:none;
}

body.left-menu-open #content {
    display: inline-block;
}

.menu {
    display: none;
    background-color: #fff;
    color: #666;
}

.menu .section {
    padding-left: 0.5em;
    color: #eee;
    font-size: 1em;
    border-top: 1px solid #ddd;
    border-left: 1px solid #ddd;
    border-bottom: 1px solid #bbb;
    border-right: 1px solid #bbb;
    background: #808080;
    background: -webkit-linear-gradient(to bottom, #bbbbbb 0%,#808080 54%,#666666 99%);
    background: linear-gradient(to bottom, #bbbbbb 0%,#808080 54%,#666666 99%);
}

.menu ul {
    list-style: none;
    margin: 0;
    padding: 0;
}

.menu li {
    font-size: 1.2em;
    padding-left: 1em;
    background-color: #ccc;
    border-top: 1px solid #ddd;
    border-left: 1px solid #ddd;
    border-bottom: 1px solid #bbb;
    border-right: 1px solid #bbb;
}

.menu li:hover {
    background-color: #d0d0d0;
    cursor: pointer;
}

.menu li.active, .menu li.active:hover {
    background-color: #ddd;
    border: 1px solid #ddd;
    cursor: default;
}

#operand1 {
    margin-top: 2px;
}

div.operator {
    text-align: center;
    font-size: 1.3em;
}

div.variable-container {
    background-color: #444;
    padding: 8px;
}

div.variable-container label {
    display: none;
}

input.variable {
    font-size: 1.3em;
    width: 8em;
}

.normalized-value {
    color: #eee;
}

input.variable {
    border: 1px solid #000;
    border-radius: 4px;
    padding-left: 3px;
    width: 7em;
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Image replacement
 */

.ir {
    background-color: transparent;
    border: 0;
    overflow: hidden;
    /* Old IE fallback */
    *text-indent: -9999px;
}

.ir:before {
    content: "";
    display: block;
    width: 0;
    height: 150%;
}

/*
 * Hide from both screenreaders and browsers: h5bp.com/u
 */

.hidden {
    display: none !important;
    visibility: hidden;
}

/*
 * Hide only visually, but have it available for screenreaders: h5bp.com/v
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element to be focusable
 * when navigated to via the keyboard: h5bp.com/p
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

/*
 * Hide visually and from screenreaders, but maintain layout
 */

.invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

/*
 * For Old IE only
 * Include this rule to trigger hasLayout and contain floats.
 */

.clearfix {
    *zoom: 1;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {

    #content {
        text-align: center;
    }

    body.left-menu-open #content, body.right-menu-open #content {
        display:block;
    }

    /* Style adjustments for viewports that meet the condition */
    .menu {
        width: 12em !important;
    }

    #modeMenu {
        position: absolute;
        top: 26px;
        left: 0;
    }

    #unitMenu {
        position: absolute;
        top: 26px;
        right: 0;

    }

    #unitMenu .header {
        display: none;
    }

    .operand, .operator {
        display: inline-block;
        vertical-align: middle;
    }

    .variable-container {
        height: 71px;
    }

    .normalized-value {
        display: block;
        height: 22px;
        margin-top: 5px;
    }
}
